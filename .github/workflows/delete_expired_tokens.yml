name: Clean Expired Tokens

on:
  schedule:
    - cron: "*/5 * * * *" # Jalankan setiap 5 menit
  workflow_dispatch: # Bisa dijalankan secara manual

jobs:
  cleanup_tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup timezone
      - name: Set timezone
        run: echo "TZ=Asia/Jakarta" >> $GITHUB_ENV

      # Install jq untuk memproses JSON
      - name: Install jq
        run: sudo apt-get install jq

      # Clean up expired tokens
      - name: Remove expired tokens
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
          GITHUB_SECRET_KEY: ${{ secrets.GITHUB_SECRET_KEY }} # Tambahkan secret key untuk signature verifikasi
        run: |
          # Cek apakah file tokens.json ada dan valid
          if [ -f tokens.json ]; then
            echo "File tokens.json ditemukan. Memeriksa apakah JSON valid..."
            # Menampilkan isi file untuk debugging
            cat tokens.json

            # Periksa apakah file tokens.json valid
            if ! jq empty tokens.json > /dev/null 2>&1; then
              echo "tokens.json tidak valid, mengosongkan isi dan memulai ulang..."
              echo "[]" > tokens.json
            fi
          else
            echo "File tokens.json tidak ditemukan. Membuat file kosong..."
            echo "[]" > tokens.json
          fi

          # Periksa apakah file tokens.json kosong
          if [ ! -s tokens.json ]; then
            echo "tokens.json kosong, membuat file kosong yang valid..."
            echo "[]" > tokens.json
          fi

          # Hitung waktu saat ini (dalam detik sejak epoch)
          current_time=$(date +%s)

          # Fungsi untuk verifikasi signature (termasuk UUID)
          verify_signature() {
            local token="$1"
            local timestamp="$2"
            local uuid="$3"
            local signature="$4"
            local secret="$5"

            # Hitung signature ulang dengan HMAC yang melibatkan UUID
            local calculated_signature
            calculated_signature=$(echo -n "${token}${timestamp}${uuid}" | openssl dgst -sha256 -hmac "$secret" | awk '{print $2}')

            # Cocokkan signature
            if [ "$calculated_signature" = "$signature" ]; then
              echo "valid"
            else
              echo "invalid"
            fi
          }

          # Filter data: hanya sisakan token yang valid dan usia kurang dari 3600 detik (60 menit)
          jq --argjson current_time "$current_time" --arg secret "$GITHUB_SECRET_KEY" '
            .[] | select(
                (($current_time - (.timestamp | gsub("\\.[0-9]+Z$"; "Z") | fromdateiso8601)) < 3600)  # Token yang lebih muda dari 60 menit
                and (.uuid != null)  # Pastikan UUID ada
            )
          ' tokens.json > temp_filtered.json

          # Verifikasi signature secara terpisah menggunakan bash
          while IFS= read -r token_data; do
            # Ambil data dari JSON yang sudah difilter
            token=$(echo "$token_data" | jq -r '.token')
            timestamp=$(echo "$token_data" | jq -r '.timestamp')
            uuid=$(echo "$token_data" | jq -r '.uuid')
            github_signature=$(echo "$token_data" | jq -r '.githubSignature')

            # Verifikasi signature
            signature_valid=$(verify_signature "$token" "$timestamp" "$uuid" "$github_signature" "$GITHUB_SECRET_KEY")

            # Jika signature valid, simpan token
            if [ "$signature_valid" = "valid" ]; then
              echo "$token_data" >> temp_valid_tokens.json
            fi
          done < temp_filtered.json

          # Periksa apakah ada perubahan pada file
          if cmp -s tokens.json temp_valid_tokens.json; then
            echo "Tidak ada perubahan. Tidak ada token yang kedaluwarsa atau tidak valid."
          else
            # Update tokens.json dengan token yang valid
            mv temp_valid_tokens.json tokens.json
            git config --global user.name "AllJrLwr"
            git config --global user.email "$GH_EMAIL"
            git add tokens.json
            git commit -m "Cleanup expired tokens"
            git push https://AllJrLwr:${GH_TOKEN}@github.com/AllJrLwr/AllJrLwr.git HEAD:main
            echo "Tokens yang kedaluwarsa atau tidak valid berhasil dihapus."
          fi
